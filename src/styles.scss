// Global styles
@use "sass:meta";
@use "sass:math";
@use "sass:map";


@mixin mq($size) {
  @if map.has-key($breakpoints, $size) {
    $breakpoint: map-get($breakpoints, $size);
    @media screen and (min-width: $breakpoint) {
      @content;
    }
  } @else if meta.type-of($size) == number {
    @if math.is-unitless($size) {
      @error 'when using a number with @mq() make sure to include a unit';
    } @else {
      @media screen and (min-width: $size) {
        @content;
      }
    }
  } @else {
    @error 'the keyword #{$size} is not in the $breakpoints map';
  }
}

:root {
  --background: #392467;
  --clr-text: #FFD1E3;
  --clr-primary: #A367B1;
  --clr-secondary: #5D3587;
  --clr-accent:#E26EE5;
  --alert: #EF4040;
}

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
* {
  margin: 0;
  padding: 0;
  font: inherit;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}

a {
  text-decoration: none;
  color: var(--clr-primary-1);
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

html,
body {
  height: 100%;
  overflow-x: hidden;
  scroll-behavior: smooth;
  font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
}

/* Set core body defaults */
body {
  font-family: var(--ff-primary);
  text-rendering: optimizeSpeed;
  line-height: 1.5;
  background-color: var(--background);
  color: var(--clr-text);
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture,
svg {
  max-width: 100%;
  display: block;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

$breakpoints: (
  small: 40em,
  medium: 60em,
  large: 84em,
);

// for creating utility classes
$sizes: (
  1: 0.25rem,
  2: 0.5rem,
  3: 0.75rem,
  4: 1rem,
  5: 1.25rem,
  6: 1.5rem,
  7: 1.75rem,
  8: 2rem,
  9: 2.5rem,
  10: 3rem,
  11: 4rem,
  12: 5rem,
  13: 6rem,
  14: 8rem,
  15: 10rem,
);

// for use in the code base
$size-1: 0.25rem;
$size-2: 0.5rem;
$size-3: 0.75rem;
$size-4: 1rem;
$size-5: 1.25rem;
$size-6: 1.5rem;
$size-7: 1.75rem;
$size-8: 2rem;
$size-9: 2.5rem;
$size-10: 3rem;
$size-11: 4rem;
$size-12: 5rem;
$size-13: 6rem;
$size-14: 8rem;
$size-15: 10rem;


html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
